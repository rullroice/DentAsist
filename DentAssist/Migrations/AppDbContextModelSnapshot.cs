// <auto-generated />
using System;
using DentAssist.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DentAssist.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DentAssist.Models.Odontologo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Especialidad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Matricula")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Matricula")
                        .IsUnique();

                    b.ToTable("Odontologos");
                });

            modelBuilder.Entity("DentAssist.Models.Paciente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RUT")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("RUT")
                        .IsUnique();

                    b.ToTable("Pacientes");
                });

            modelBuilder.Entity("DentAssist.Models.PasoTratamiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("FechaEstimada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaRealizado")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdPlanTratamiento")
                        .HasColumnType("int");

                    b.Property<int>("IdTratamiento")
                        .HasColumnType("int");

                    b.Property<string>("ObservacionesClinicas")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Secuencia")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdPlanTratamiento");

                    b.HasIndex("IdTratamiento");

                    b.ToTable("PasosDeTratamiento");
                });

            modelBuilder.Entity("DentAssist.Models.PlanTratamiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdOdontologo")
                        .HasColumnType("int");

                    b.Property<int>("IdPaciente")
                        .HasColumnType("int");

                    b.Property<string>("ObservacionesGenerales")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id");

                    b.HasIndex("IdOdontologo");

                    b.HasIndex("IdPaciente");

                    b.ToTable("PlanesDeTratamiento");
                });

            modelBuilder.Entity("DentAssist.Models.Tratamiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal>("PrecioEstimado")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.ToTable("Tratamientos");
                });

            modelBuilder.Entity("DentAssist.Models.Turno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("DuracionMinutos")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdOdontologo")
                        .HasColumnType("int");

                    b.Property<int>("IdPaciente")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdOdontologo");

                    b.HasIndex("IdPaciente");

                    b.ToTable("Turnos");
                });

            modelBuilder.Entity("DentAssist.Models.PasoTratamiento", b =>
                {
                    b.HasOne("DentAssist.Models.PlanTratamiento", "PlanTratamiento")
                        .WithMany("PasosDelPlan")
                        .HasForeignKey("IdPlanTratamiento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DentAssist.Models.Tratamiento", "Tratamiento")
                        .WithMany("PasosEnTratamientos")
                        .HasForeignKey("IdTratamiento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlanTratamiento");

                    b.Navigation("Tratamiento");
                });

            modelBuilder.Entity("DentAssist.Models.PlanTratamiento", b =>
                {
                    b.HasOne("DentAssist.Models.Odontologo", "Odontologo")
                        .WithMany("PlanesDeTratamiento")
                        .HasForeignKey("IdOdontologo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DentAssist.Models.Paciente", "Paciente")
                        .WithMany("PlanesDeTratamiento")
                        .HasForeignKey("IdPaciente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Odontologo");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("DentAssist.Models.Turno", b =>
                {
                    b.HasOne("DentAssist.Models.Odontologo", "Odontologo")
                        .WithMany("Turnos")
                        .HasForeignKey("IdOdontologo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DentAssist.Models.Paciente", "Paciente")
                        .WithMany("Turnos")
                        .HasForeignKey("IdPaciente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Odontologo");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("DentAssist.Models.Odontologo", b =>
                {
                    b.Navigation("PlanesDeTratamiento");

                    b.Navigation("Turnos");
                });

            modelBuilder.Entity("DentAssist.Models.Paciente", b =>
                {
                    b.Navigation("PlanesDeTratamiento");

                    b.Navigation("Turnos");
                });

            modelBuilder.Entity("DentAssist.Models.PlanTratamiento", b =>
                {
                    b.Navigation("PasosDelPlan");
                });

            modelBuilder.Entity("DentAssist.Models.Tratamiento", b =>
                {
                    b.Navigation("PasosEnTratamientos");
                });
#pragma warning restore 612, 618
        }
    }
}
